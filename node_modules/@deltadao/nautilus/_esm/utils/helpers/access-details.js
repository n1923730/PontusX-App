import { LoggerInstance } from '@oceanprotocol/lib';
import { fetchData, getAccessDetailsFromTokenPrice, getQueryContext } from '../subgraph';
import { tokenPriceQuery } from '../subgraph/TokenPriceQuery.gql';
export async function getAccessDetails(subgraphUri, datatokenAddress, timeout, account = '') {
    try {
        const queryContext = getQueryContext(subgraphUri);
        const tokenQueryResult = await fetchData(subgraphUri, tokenPriceQuery, {
            datatokenId: datatokenAddress.toLowerCase(),
            account: account?.toLowerCase()
        }, queryContext);
        const tokenPrice = tokenQueryResult.data.token;
        const accessDetails = getAccessDetailsFromTokenPrice(tokenPrice, timeout);
        return accessDetails;
    }
    catch (error) {
        LoggerInstance.error('Error getting access details: ', error.message);
    }
}
//# sourceMappingURL=access-details.js.map