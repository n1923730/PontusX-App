import { type Client, type OperationContext, type OperationResult, type TypedDocumentNode } from 'urql';
import type { AccessDetails } from '../../@types/Compute';
import type { ITokenPriceQuery } from './TokenPriceQuery.gql.generated';
export declare function getQueryContext(subgraphUri: string): OperationContext;
export declare function geturqlClient(subgraphUri: any): Client;
export declare function fetchData<T, V>(subgraphUri: string, query: TypedDocumentNode, variables: any, context: OperationContext): Promise<OperationResult<T, V>>;
export declare function getAccessDetailsFromTokenPrice(tokenPrice: ITokenPriceQuery['token'], timeout?: number): AccessDetails;
