"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOrderPriceAndFees = exports.getFixedBuyPrice = void 0;
const lib_1 = require("@oceanprotocol/lib");
const decimal_js_1 = __importDefault(require("decimal.js"));
async function getFixedBuyPrice(accessDetails, config, signer) {
    const fixed = new lib_1.FixedRateExchange(config.fixedRateExchangeAddress, signer);
    const estimatedPrice = await fixed.calcBaseInGivenDatatokensOut(accessDetails.addressOrId, '1', '0');
    return estimatedPrice;
}
exports.getFixedBuyPrice = getFixedBuyPrice;
async function getOrderPriceAndFees(asset, signer, config, providerFees) {
    const orderPriceAndFees = {
        price: '0',
        publisherMarketOrderFee: asset.accessDetails.publisherMarketOrderFee,
        consumeMarketOrderFee: '0',
        providerFee: {
            providerFeeAmount: '0'
        },
        opcFee: '0'
    };
    orderPriceAndFees.providerFee = providerFees;
    if (asset?.accessDetails?.type === 'fixed') {
        const fixed = await getFixedBuyPrice(asset?.accessDetails, config, signer);
        orderPriceAndFees.price = fixed.baseTokenAmount;
        orderPriceAndFees.opcFee = fixed.oceanFeeAmount;
    }
    orderPriceAndFees.price = new decimal_js_1.default(+orderPriceAndFees.price || 0)
        .add(new decimal_js_1.default(+orderPriceAndFees?.consumeMarketOrderFee || 0))
        .add(new decimal_js_1.default(+orderPriceAndFees?.publisherMarketOrderFee || 0))
        .toString();
    return orderPriceAndFees;
}
exports.getOrderPriceAndFees = getOrderPriceAndFees;
//# sourceMappingURL=prices.js.map