"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAssetWithPrice = exports.getAssetsWithAccessDetails = void 0;
const lib_1 = require("@oceanprotocol/lib");
const aquarius_1 = require("../aquarius");
const access_details_1 = require("./access-details");
const prices_1 = require("./prices");
async function getAssetsWithAccessDetails(identifiers, config, signer) {
    const controller = new AbortController();
    lib_1.LoggerInstance.debug(`Retrieving ${identifiers.length} assets from metadata cache ...`);
    const signerAddress = await signer.getAddress();
    const assets = await Promise.all(identifiers.map((asset) => (0, aquarius_1.getAsset)(config.metadataCacheUri, asset.did, controller.signal)));
    lib_1.LoggerInstance.debug(`Retrieve access details for ${identifiers.length} assets from subgraph ...`);
    const assetAccessDetails = await Promise.all(assets.map((asset, i) => {
        const serviceIndex = Math.max(asset.services.findIndex((service) => service.id === identifiers[i].serviceId), 0);
        return (0, access_details_1.getAccessDetails)(config.subgraphUri, asset.datatokens[serviceIndex].address, asset.services[serviceIndex].timeout, signerAddress);
    }));
    return assets.map((asset, i) => ({
        ...asset,
        accessDetails: assetAccessDetails[i]
    }));
}
exports.getAssetsWithAccessDetails = getAssetsWithAccessDetails;
async function getAssetWithPrice(asset, signer, config, providerFees) {
    return {
        ...asset,
        orderPriceAndFees: await (0, prices_1.getOrderPriceAndFees)(asset, signer, config, providerFees)
    };
}
exports.getAssetWithPrice = getAssetWithPrice;
//# sourceMappingURL=assets.js.map