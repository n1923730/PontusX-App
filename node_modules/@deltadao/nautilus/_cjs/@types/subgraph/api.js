"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VeAllocationUpdateType = exports._SubgraphErrorPolicy_ = exports.VeOcean_OrderBy = exports.VeFeeDistributor_OrderBy = exports.VeFeeDistributorCheckPoint_OrderBy = exports.VeDeposit_OrderBy = exports.VeDelegation_OrderBy = exports.VeDelegationUpdate_OrderBy = exports.VeClaim_OrderBy = exports.VeAllocation_OrderBy = exports.VeAllocationUpdate_OrderBy = exports.VeAllocateUser_OrderBy = exports.VeAllocateId_OrderBy = exports.User_OrderBy = exports.Token_OrderBy = exports.TokenValuePair_OrderBy = exports.Template_OrderBy = exports.Order_OrderBy = exports.OrderReuse_OrderBy = exports.OrderDirection = exports.Opc_OrderBy = exports.Nft_OrderBy = exports.NftUpdate_OrderBy = exports.NftUpdateType = exports.NftTransferHistory_OrderBy = exports.NftData_OrderBy = exports.GlobalTotalLiquidityPair_OrderBy = exports.GlobalTotalFixedSwapPair_OrderBy = exports.GlobalStatistic_OrderBy = exports.FixedRateExchange_OrderBy = exports.FixedRateExchangeUpdate_OrderBy = exports.FixedRateExchangeSwap_OrderBy = exports.Dispenser_OrderBy = exports.DispenserTransaction_OrderBy = exports.DfReward_OrderBy = exports.DfHistory_OrderBy = exports.DfHistoryType = exports.DfAvailableClaim_OrderBy = void 0;
var DfAvailableClaim_OrderBy;
(function (DfAvailableClaim_OrderBy) {
    DfAvailableClaim_OrderBy["Amount"] = "amount";
    DfAvailableClaim_OrderBy["Id"] = "id";
    DfAvailableClaim_OrderBy["Receiver"] = "receiver";
    DfAvailableClaim_OrderBy["Token"] = "token";
})(DfAvailableClaim_OrderBy || (exports.DfAvailableClaim_OrderBy = DfAvailableClaim_OrderBy = {}));
var DfHistoryType;
(function (DfHistoryType) {
    DfHistoryType["Allocated"] = "Allocated";
    DfHistoryType["Claimed"] = "Claimed";
})(DfHistoryType || (exports.DfHistoryType = DfHistoryType = {}));
var DfHistory_OrderBy;
(function (DfHistory_OrderBy) {
    DfHistory_OrderBy["Amount"] = "amount";
    DfHistory_OrderBy["Block"] = "block";
    DfHistory_OrderBy["EventIndex"] = "eventIndex";
    DfHistory_OrderBy["Id"] = "id";
    DfHistory_OrderBy["Receiver"] = "receiver";
    DfHistory_OrderBy["Timestamp"] = "timestamp";
    DfHistory_OrderBy["Token"] = "token";
    DfHistory_OrderBy["Tx"] = "tx";
    DfHistory_OrderBy["Type"] = "type";
})(DfHistory_OrderBy || (exports.DfHistory_OrderBy = DfHistory_OrderBy = {}));
var DfReward_OrderBy;
(function (DfReward_OrderBy) {
    DfReward_OrderBy["AvailableClaims"] = "availableClaims";
    DfReward_OrderBy["History"] = "history";
    DfReward_OrderBy["Id"] = "id";
    DfReward_OrderBy["Receiver"] = "receiver";
})(DfReward_OrderBy || (exports.DfReward_OrderBy = DfReward_OrderBy = {}));
var DispenserTransaction_OrderBy;
(function (DispenserTransaction_OrderBy) {
    DispenserTransaction_OrderBy["Amount"] = "amount";
    DispenserTransaction_OrderBy["Block"] = "block";
    DispenserTransaction_OrderBy["CreatedTimestamp"] = "createdTimestamp";
    DispenserTransaction_OrderBy["Dispenser"] = "dispenser";
    DispenserTransaction_OrderBy["EventIndex"] = "eventIndex";
    DispenserTransaction_OrderBy["Id"] = "id";
    DispenserTransaction_OrderBy["Tx"] = "tx";
    DispenserTransaction_OrderBy["User"] = "user";
})(DispenserTransaction_OrderBy || (exports.DispenserTransaction_OrderBy = DispenserTransaction_OrderBy = {}));
var Dispenser_OrderBy;
(function (Dispenser_OrderBy) {
    Dispenser_OrderBy["Active"] = "active";
    Dispenser_OrderBy["AllowedSwapper"] = "allowedSwapper";
    Dispenser_OrderBy["Balance"] = "balance";
    Dispenser_OrderBy["Block"] = "block";
    Dispenser_OrderBy["Contract"] = "contract";
    Dispenser_OrderBy["CreatedTimestamp"] = "createdTimestamp";
    Dispenser_OrderBy["Dispenses"] = "dispenses";
    Dispenser_OrderBy["EventIndex"] = "eventIndex";
    Dispenser_OrderBy["Id"] = "id";
    Dispenser_OrderBy["IsMinter"] = "isMinter";
    Dispenser_OrderBy["MaxBalance"] = "maxBalance";
    Dispenser_OrderBy["MaxTokens"] = "maxTokens";
    Dispenser_OrderBy["Owner"] = "owner";
    Dispenser_OrderBy["Token"] = "token";
    Dispenser_OrderBy["Tx"] = "tx";
})(Dispenser_OrderBy || (exports.Dispenser_OrderBy = Dispenser_OrderBy = {}));
var FixedRateExchangeSwap_OrderBy;
(function (FixedRateExchangeSwap_OrderBy) {
    FixedRateExchangeSwap_OrderBy["BaseTokenAmount"] = "baseTokenAmount";
    FixedRateExchangeSwap_OrderBy["Block"] = "block";
    FixedRateExchangeSwap_OrderBy["By"] = "by";
    FixedRateExchangeSwap_OrderBy["ConsumeMarketFeeAmount"] = "consumeMarketFeeAmount";
    FixedRateExchangeSwap_OrderBy["CreatedTimestamp"] = "createdTimestamp";
    FixedRateExchangeSwap_OrderBy["DataTokenAmount"] = "dataTokenAmount";
    FixedRateExchangeSwap_OrderBy["EventIndex"] = "eventIndex";
    FixedRateExchangeSwap_OrderBy["ExchangeId"] = "exchangeId";
    FixedRateExchangeSwap_OrderBy["Id"] = "id";
    FixedRateExchangeSwap_OrderBy["MarketFeeAmount"] = "marketFeeAmount";
    FixedRateExchangeSwap_OrderBy["OceanFeeAmount"] = "oceanFeeAmount";
    FixedRateExchangeSwap_OrderBy["Tx"] = "tx";
})(FixedRateExchangeSwap_OrderBy || (exports.FixedRateExchangeSwap_OrderBy = FixedRateExchangeSwap_OrderBy = {}));
var FixedRateExchangeUpdate_OrderBy;
(function (FixedRateExchangeUpdate_OrderBy) {
    FixedRateExchangeUpdate_OrderBy["Block"] = "block";
    FixedRateExchangeUpdate_OrderBy["CreatedTimestamp"] = "createdTimestamp";
    FixedRateExchangeUpdate_OrderBy["EventIndex"] = "eventIndex";
    FixedRateExchangeUpdate_OrderBy["ExchangeId"] = "exchangeId";
    FixedRateExchangeUpdate_OrderBy["Id"] = "id";
    FixedRateExchangeUpdate_OrderBy["NewActive"] = "newActive";
    FixedRateExchangeUpdate_OrderBy["NewAllowedSwapper"] = "newAllowedSwapper";
    FixedRateExchangeUpdate_OrderBy["NewPrice"] = "newPrice";
    FixedRateExchangeUpdate_OrderBy["OldActive"] = "oldActive";
    FixedRateExchangeUpdate_OrderBy["OldAllowedSwapper"] = "oldAllowedSwapper";
    FixedRateExchangeUpdate_OrderBy["OldPrice"] = "oldPrice";
    FixedRateExchangeUpdate_OrderBy["Tx"] = "tx";
})(FixedRateExchangeUpdate_OrderBy || (exports.FixedRateExchangeUpdate_OrderBy = FixedRateExchangeUpdate_OrderBy = {}));
var FixedRateExchange_OrderBy;
(function (FixedRateExchange_OrderBy) {
    FixedRateExchange_OrderBy["Active"] = "active";
    FixedRateExchange_OrderBy["AllowedSwapper"] = "allowedSwapper";
    FixedRateExchange_OrderBy["BaseToken"] = "baseToken";
    FixedRateExchange_OrderBy["BaseTokenBalance"] = "baseTokenBalance";
    FixedRateExchange_OrderBy["BaseTokenSupply"] = "baseTokenSupply";
    FixedRateExchange_OrderBy["Block"] = "block";
    FixedRateExchange_OrderBy["Contract"] = "contract";
    FixedRateExchange_OrderBy["CreatedTimestamp"] = "createdTimestamp";
    FixedRateExchange_OrderBy["Datatoken"] = "datatoken";
    FixedRateExchange_OrderBy["DatatokenBalance"] = "datatokenBalance";
    FixedRateExchange_OrderBy["DatatokenSupply"] = "datatokenSupply";
    FixedRateExchange_OrderBy["EventIndex"] = "eventIndex";
    FixedRateExchange_OrderBy["ExchangeId"] = "exchangeId";
    FixedRateExchange_OrderBy["Id"] = "id";
    FixedRateExchange_OrderBy["IsMinter"] = "isMinter";
    FixedRateExchange_OrderBy["Owner"] = "owner";
    FixedRateExchange_OrderBy["Price"] = "price";
    FixedRateExchange_OrderBy["PublishMarketFeeAddress"] = "publishMarketFeeAddress";
    FixedRateExchange_OrderBy["PublishMarketSwapFee"] = "publishMarketSwapFee";
    FixedRateExchange_OrderBy["Swaps"] = "swaps";
    FixedRateExchange_OrderBy["TotalSwapValue"] = "totalSwapValue";
    FixedRateExchange_OrderBy["Tx"] = "tx";
    FixedRateExchange_OrderBy["Updates"] = "updates";
    FixedRateExchange_OrderBy["WithMint"] = "withMint";
})(FixedRateExchange_OrderBy || (exports.FixedRateExchange_OrderBy = FixedRateExchange_OrderBy = {}));
var GlobalStatistic_OrderBy;
(function (GlobalStatistic_OrderBy) {
    GlobalStatistic_OrderBy["DatatokenCount"] = "datatokenCount";
    GlobalStatistic_OrderBy["DispenserCount"] = "dispenserCount";
    GlobalStatistic_OrderBy["FixedCount"] = "fixedCount";
    GlobalStatistic_OrderBy["Id"] = "id";
    GlobalStatistic_OrderBy["NftCount"] = "nftCount";
    GlobalStatistic_OrderBy["OrderCount"] = "orderCount";
    GlobalStatistic_OrderBy["TotalFixedSwapVolume"] = "totalFixedSwapVolume";
    GlobalStatistic_OrderBy["TotalOceanLocked"] = "totalOceanLocked";
    GlobalStatistic_OrderBy["Version"] = "version";
})(GlobalStatistic_OrderBy || (exports.GlobalStatistic_OrderBy = GlobalStatistic_OrderBy = {}));
var GlobalTotalFixedSwapPair_OrderBy;
(function (GlobalTotalFixedSwapPair_OrderBy) {
    GlobalTotalFixedSwapPair_OrderBy["Count"] = "count";
    GlobalTotalFixedSwapPair_OrderBy["GlobalStatistic"] = "globalStatistic";
    GlobalTotalFixedSwapPair_OrderBy["Id"] = "id";
    GlobalTotalFixedSwapPair_OrderBy["Token"] = "token";
    GlobalTotalFixedSwapPair_OrderBy["Value"] = "value";
})(GlobalTotalFixedSwapPair_OrderBy || (exports.GlobalTotalFixedSwapPair_OrderBy = GlobalTotalFixedSwapPair_OrderBy = {}));
var GlobalTotalLiquidityPair_OrderBy;
(function (GlobalTotalLiquidityPair_OrderBy) {
    GlobalTotalLiquidityPair_OrderBy["GlobalStatistic"] = "globalStatistic";
    GlobalTotalLiquidityPair_OrderBy["Id"] = "id";
    GlobalTotalLiquidityPair_OrderBy["Token"] = "token";
    GlobalTotalLiquidityPair_OrderBy["Value"] = "value";
})(GlobalTotalLiquidityPair_OrderBy || (exports.GlobalTotalLiquidityPair_OrderBy = GlobalTotalLiquidityPair_OrderBy = {}));
var NftData_OrderBy;
(function (NftData_OrderBy) {
    NftData_OrderBy["Id"] = "id";
    NftData_OrderBy["Key"] = "key";
    NftData_OrderBy["Nft"] = "nft";
    NftData_OrderBy["Value"] = "value";
})(NftData_OrderBy || (exports.NftData_OrderBy = NftData_OrderBy = {}));
var NftTransferHistory_OrderBy;
(function (NftTransferHistory_OrderBy) {
    NftTransferHistory_OrderBy["Block"] = "block";
    NftTransferHistory_OrderBy["EventIndex"] = "eventIndex";
    NftTransferHistory_OrderBy["Id"] = "id";
    NftTransferHistory_OrderBy["NewOwner"] = "newOwner";
    NftTransferHistory_OrderBy["Nft"] = "nft";
    NftTransferHistory_OrderBy["OldOwner"] = "oldOwner";
    NftTransferHistory_OrderBy["Timestamp"] = "timestamp";
    NftTransferHistory_OrderBy["TxId"] = "txId";
})(NftTransferHistory_OrderBy || (exports.NftTransferHistory_OrderBy = NftTransferHistory_OrderBy = {}));
var NftUpdateType;
(function (NftUpdateType) {
    NftUpdateType["MetadataCreated"] = "METADATA_CREATED";
    NftUpdateType["MetadataUpdated"] = "METADATA_UPDATED";
    NftUpdateType["StateUpdated"] = "STATE_UPDATED";
    NftUpdateType["TokenuriUpdated"] = "TOKENURI_UPDATED";
})(NftUpdateType || (exports.NftUpdateType = NftUpdateType = {}));
var NftUpdate_OrderBy;
(function (NftUpdate_OrderBy) {
    NftUpdate_OrderBy["AssetState"] = "assetState";
    NftUpdate_OrderBy["Block"] = "block";
    NftUpdate_OrderBy["EventIndex"] = "eventIndex";
    NftUpdate_OrderBy["Id"] = "id";
    NftUpdate_OrderBy["Nft"] = "nft";
    NftUpdate_OrderBy["ProviderUrl"] = "providerUrl";
    NftUpdate_OrderBy["Timestamp"] = "timestamp";
    NftUpdate_OrderBy["TokenUri"] = "tokenUri";
    NftUpdate_OrderBy["Tx"] = "tx";
    NftUpdate_OrderBy["Type"] = "type";
    NftUpdate_OrderBy["UserAddress"] = "userAddress";
})(NftUpdate_OrderBy || (exports.NftUpdate_OrderBy = NftUpdate_OrderBy = {}));
var Nft_OrderBy;
(function (Nft_OrderBy) {
    Nft_OrderBy["Address"] = "address";
    Nft_OrderBy["AssetState"] = "assetState";
    Nft_OrderBy["Block"] = "block";
    Nft_OrderBy["CreatedTimestamp"] = "createdTimestamp";
    Nft_OrderBy["Creator"] = "creator";
    Nft_OrderBy["Erc20DeployerRole"] = "erc20DeployerRole";
    Nft_OrderBy["EventIndex"] = "eventIndex";
    Nft_OrderBy["HasMetadata"] = "hasMetadata";
    Nft_OrderBy["Id"] = "id";
    Nft_OrderBy["ManagerRole"] = "managerRole";
    Nft_OrderBy["MetadataRole"] = "metadataRole";
    Nft_OrderBy["Name"] = "name";
    Nft_OrderBy["NftData"] = "nftData";
    Nft_OrderBy["OrderCount"] = "orderCount";
    Nft_OrderBy["Owner"] = "owner";
    Nft_OrderBy["ProviderUrl"] = "providerUrl";
    Nft_OrderBy["StoreUpdateRole"] = "storeUpdateRole";
    Nft_OrderBy["Symbol"] = "symbol";
    Nft_OrderBy["Template"] = "template";
    Nft_OrderBy["TokenUri"] = "tokenUri";
    Nft_OrderBy["TransferHistory"] = "transferHistory";
    Nft_OrderBy["Transferable"] = "transferable";
    Nft_OrderBy["Tx"] = "tx";
})(Nft_OrderBy || (exports.Nft_OrderBy = Nft_OrderBy = {}));
var Opc_OrderBy;
(function (Opc_OrderBy) {
    Opc_OrderBy["ApprovedTokens"] = "approvedTokens";
    Opc_OrderBy["Id"] = "id";
    Opc_OrderBy["OrderFee"] = "orderFee";
    Opc_OrderBy["ProviderFee"] = "providerFee";
    Opc_OrderBy["SwapNonOceanFee"] = "swapNonOceanFee";
    Opc_OrderBy["SwapOceanFee"] = "swapOceanFee";
})(Opc_OrderBy || (exports.Opc_OrderBy = Opc_OrderBy = {}));
var OrderDirection;
(function (OrderDirection) {
    OrderDirection["Asc"] = "asc";
    OrderDirection["Desc"] = "desc";
})(OrderDirection || (exports.OrderDirection = OrderDirection = {}));
var OrderReuse_OrderBy;
(function (OrderReuse_OrderBy) {
    OrderReuse_OrderBy["Block"] = "block";
    OrderReuse_OrderBy["Caller"] = "caller";
    OrderReuse_OrderBy["CreatedTimestamp"] = "createdTimestamp";
    OrderReuse_OrderBy["EventIndex"] = "eventIndex";
    OrderReuse_OrderBy["GasPrice"] = "gasPrice";
    OrderReuse_OrderBy["GasUsed"] = "gasUsed";
    OrderReuse_OrderBy["Id"] = "id";
    OrderReuse_OrderBy["Order"] = "order";
    OrderReuse_OrderBy["ProviderFee"] = "providerFee";
    OrderReuse_OrderBy["ProviderFeeValidUntil"] = "providerFeeValidUntil";
    OrderReuse_OrderBy["Tx"] = "tx";
})(OrderReuse_OrderBy || (exports.OrderReuse_OrderBy = OrderReuse_OrderBy = {}));
var Order_OrderBy;
(function (Order_OrderBy) {
    Order_OrderBy["Amount"] = "amount";
    Order_OrderBy["Block"] = "block";
    Order_OrderBy["Consumer"] = "consumer";
    Order_OrderBy["ConsumerMarket"] = "consumerMarket";
    Order_OrderBy["ConsumerMarketAmmount"] = "consumerMarketAmmount";
    Order_OrderBy["ConsumerMarketToken"] = "consumerMarketToken";
    Order_OrderBy["CreatedTimestamp"] = "createdTimestamp";
    Order_OrderBy["Datatoken"] = "datatoken";
    Order_OrderBy["EstimatedUsdValue"] = "estimatedUSDValue";
    Order_OrderBy["EventIndex"] = "eventIndex";
    Order_OrderBy["GasPrice"] = "gasPrice";
    Order_OrderBy["GasUsed"] = "gasUsed";
    Order_OrderBy["Id"] = "id";
    Order_OrderBy["LastPriceToken"] = "lastPriceToken";
    Order_OrderBy["LastPriceValue"] = "lastPriceValue";
    Order_OrderBy["NftOwner"] = "nftOwner";
    Order_OrderBy["Payer"] = "payer";
    Order_OrderBy["ProviderFee"] = "providerFee";
    Order_OrderBy["ProviderFeeValidUntil"] = "providerFeeValidUntil";
    Order_OrderBy["PublishingMarket"] = "publishingMarket";
    Order_OrderBy["PublishingMarketAmmount"] = "publishingMarketAmmount";
    Order_OrderBy["PublishingMarketToken"] = "publishingMarketToken";
    Order_OrderBy["Reuses"] = "reuses";
    Order_OrderBy["ServiceIndex"] = "serviceIndex";
    Order_OrderBy["Tx"] = "tx";
})(Order_OrderBy || (exports.Order_OrderBy = Order_OrderBy = {}));
var Template_OrderBy;
(function (Template_OrderBy) {
    Template_OrderBy["DispenserTemplates"] = "dispenserTemplates";
    Template_OrderBy["FixedRateTemplates"] = "fixedRateTemplates";
    Template_OrderBy["Id"] = "id";
    Template_OrderBy["SsTemplates"] = "ssTemplates";
})(Template_OrderBy || (exports.Template_OrderBy = Template_OrderBy = {}));
var TokenValuePair_OrderBy;
(function (TokenValuePair_OrderBy) {
    TokenValuePair_OrderBy["Id"] = "id";
    TokenValuePair_OrderBy["Token"] = "token";
    TokenValuePair_OrderBy["Value"] = "value";
})(TokenValuePair_OrderBy || (exports.TokenValuePair_OrderBy = TokenValuePair_OrderBy = {}));
var Token_OrderBy;
(function (Token_OrderBy) {
    Token_OrderBy["Address"] = "address";
    Token_OrderBy["Block"] = "block";
    Token_OrderBy["Cap"] = "cap";
    Token_OrderBy["CreatedTimestamp"] = "createdTimestamp";
    Token_OrderBy["Decimals"] = "decimals";
    Token_OrderBy["Dispensers"] = "dispensers";
    Token_OrderBy["EventIndex"] = "eventIndex";
    Token_OrderBy["FixedRateExchanges"] = "fixedRateExchanges";
    Token_OrderBy["HolderCount"] = "holderCount";
    Token_OrderBy["Id"] = "id";
    Token_OrderBy["IsDatatoken"] = "isDatatoken";
    Token_OrderBy["LastPriceToken"] = "lastPriceToken";
    Token_OrderBy["LastPriceValue"] = "lastPriceValue";
    Token_OrderBy["Minter"] = "minter";
    Token_OrderBy["Name"] = "name";
    Token_OrderBy["Nft"] = "nft";
    Token_OrderBy["OrderCount"] = "orderCount";
    Token_OrderBy["Orders"] = "orders";
    Token_OrderBy["PaymentCollector"] = "paymentCollector";
    Token_OrderBy["PaymentManager"] = "paymentManager";
    Token_OrderBy["PublishMarketFeeAddress"] = "publishMarketFeeAddress";
    Token_OrderBy["PublishMarketFeeAmount"] = "publishMarketFeeAmount";
    Token_OrderBy["PublishMarketFeeToken"] = "publishMarketFeeToken";
    Token_OrderBy["Supply"] = "supply";
    Token_OrderBy["Symbol"] = "symbol";
    Token_OrderBy["TemplateId"] = "templateId";
    Token_OrderBy["Tx"] = "tx";
})(Token_OrderBy || (exports.Token_OrderBy = Token_OrderBy = {}));
var User_OrderBy;
(function (User_OrderBy) {
    User_OrderBy["FreSwaps"] = "freSwaps";
    User_OrderBy["Id"] = "id";
    User_OrderBy["Orders"] = "orders";
    User_OrderBy["TokenBalancesOwned"] = "tokenBalancesOwned";
    User_OrderBy["TotalOrders"] = "totalOrders";
    User_OrderBy["TotalSales"] = "totalSales";
})(User_OrderBy || (exports.User_OrderBy = User_OrderBy = {}));
var VeAllocateId_OrderBy;
(function (VeAllocateId_OrderBy) {
    VeAllocateId_OrderBy["AllocatedTotal"] = "allocatedTotal";
    VeAllocateId_OrderBy["Block"] = "block";
    VeAllocateId_OrderBy["ChainId"] = "chainId";
    VeAllocateId_OrderBy["EventIndex"] = "eventIndex";
    VeAllocateId_OrderBy["FirstContact"] = "firstContact";
    VeAllocateId_OrderBy["Id"] = "id";
    VeAllocateId_OrderBy["LastContact"] = "lastContact";
    VeAllocateId_OrderBy["NftAddress"] = "nftAddress";
    VeAllocateId_OrderBy["Tx"] = "tx";
    VeAllocateId_OrderBy["VeAllocation"] = "veAllocation";
})(VeAllocateId_OrderBy || (exports.VeAllocateId_OrderBy = VeAllocateId_OrderBy = {}));
var VeAllocateUser_OrderBy;
(function (VeAllocateUser_OrderBy) {
    VeAllocateUser_OrderBy["AllocatedTotal"] = "allocatedTotal";
    VeAllocateUser_OrderBy["Block"] = "block";
    VeAllocateUser_OrderBy["EventIndex"] = "eventIndex";
    VeAllocateUser_OrderBy["FirstContact"] = "firstContact";
    VeAllocateUser_OrderBy["Id"] = "id";
    VeAllocateUser_OrderBy["LastContact"] = "lastContact";
    VeAllocateUser_OrderBy["Tx"] = "tx";
    VeAllocateUser_OrderBy["VeAllocation"] = "veAllocation";
    VeAllocateUser_OrderBy["VeOcean"] = "veOcean";
})(VeAllocateUser_OrderBy || (exports.VeAllocateUser_OrderBy = VeAllocateUser_OrderBy = {}));
var VeAllocationUpdate_OrderBy;
(function (VeAllocationUpdate_OrderBy) {
    VeAllocationUpdate_OrderBy["AllocatedTotal"] = "allocatedTotal";
    VeAllocationUpdate_OrderBy["Block"] = "block";
    VeAllocationUpdate_OrderBy["EventIndex"] = "eventIndex";
    VeAllocationUpdate_OrderBy["Id"] = "id";
    VeAllocationUpdate_OrderBy["Timestamp"] = "timestamp";
    VeAllocationUpdate_OrderBy["Tx"] = "tx";
    VeAllocationUpdate_OrderBy["Type"] = "type";
    VeAllocationUpdate_OrderBy["VeAllocation"] = "veAllocation";
})(VeAllocationUpdate_OrderBy || (exports.VeAllocationUpdate_OrderBy = VeAllocationUpdate_OrderBy = {}));
var VeAllocation_OrderBy;
(function (VeAllocation_OrderBy) {
    VeAllocation_OrderBy["Allocated"] = "allocated";
    VeAllocation_OrderBy["AllocationId"] = "allocationId";
    VeAllocation_OrderBy["AllocationUser"] = "allocationUser";
    VeAllocation_OrderBy["Block"] = "block";
    VeAllocation_OrderBy["ChainId"] = "chainId";
    VeAllocation_OrderBy["EventIndex"] = "eventIndex";
    VeAllocation_OrderBy["FirstContact"] = "firstContact";
    VeAllocation_OrderBy["Id"] = "id";
    VeAllocation_OrderBy["LastContact"] = "lastContact";
    VeAllocation_OrderBy["NftAddress"] = "nftAddress";
    VeAllocation_OrderBy["Tx"] = "tx";
    VeAllocation_OrderBy["Updates"] = "updates";
})(VeAllocation_OrderBy || (exports.VeAllocation_OrderBy = VeAllocation_OrderBy = {}));
var VeClaim_OrderBy;
(function (VeClaim_OrderBy) {
    VeClaim_OrderBy["VeFeeDistributor"] = "VeFeeDistributor";
    VeClaim_OrderBy["Amount"] = "amount";
    VeClaim_OrderBy["Block"] = "block";
    VeClaim_OrderBy["ClaimEpoch"] = "claim_epoch";
    VeClaim_OrderBy["EventIndex"] = "eventIndex";
    VeClaim_OrderBy["Id"] = "id";
    VeClaim_OrderBy["MaxEpoch"] = "max_epoch";
    VeClaim_OrderBy["Timestamp"] = "timestamp";
    VeClaim_OrderBy["Tx"] = "tx";
    VeClaim_OrderBy["VeOcean"] = "veOcean";
})(VeClaim_OrderBy || (exports.VeClaim_OrderBy = VeClaim_OrderBy = {}));
var VeDelegationUpdate_OrderBy;
(function (VeDelegationUpdate_OrderBy) {
    VeDelegationUpdate_OrderBy["Amount"] = "amount";
    VeDelegationUpdate_OrderBy["Block"] = "block";
    VeDelegationUpdate_OrderBy["CancelTime"] = "cancelTime";
    VeDelegationUpdate_OrderBy["EventIndex"] = "eventIndex";
    VeDelegationUpdate_OrderBy["ExpireTime"] = "expireTime";
    VeDelegationUpdate_OrderBy["Id"] = "id";
    VeDelegationUpdate_OrderBy["Sender"] = "sender";
    VeDelegationUpdate_OrderBy["Timestamp"] = "timestamp";
    VeDelegationUpdate_OrderBy["Tx"] = "tx";
    VeDelegationUpdate_OrderBy["Type"] = "type";
    VeDelegationUpdate_OrderBy["VeDelegation"] = "veDelegation";
})(VeDelegationUpdate_OrderBy || (exports.VeDelegationUpdate_OrderBy = VeDelegationUpdate_OrderBy = {}));
var VeDelegation_OrderBy;
(function (VeDelegation_OrderBy) {
    VeDelegation_OrderBy["Amount"] = "amount";
    VeDelegation_OrderBy["CancelTime"] = "cancelTime";
    VeDelegation_OrderBy["Delegator"] = "delegator";
    VeDelegation_OrderBy["ExpireTime"] = "expireTime";
    VeDelegation_OrderBy["Id"] = "id";
    VeDelegation_OrderBy["LockedAmount"] = "lockedAmount";
    VeDelegation_OrderBy["Receiver"] = "receiver";
    VeDelegation_OrderBy["TimeLeftUnlock"] = "timeLeftUnlock";
    VeDelegation_OrderBy["TokenId"] = "tokenId";
    VeDelegation_OrderBy["Updates"] = "updates";
})(VeDelegation_OrderBy || (exports.VeDelegation_OrderBy = VeDelegation_OrderBy = {}));
var VeDeposit_OrderBy;
(function (VeDeposit_OrderBy) {
    VeDeposit_OrderBy["Block"] = "block";
    VeDeposit_OrderBy["EventIndex"] = "eventIndex";
    VeDeposit_OrderBy["Id"] = "id";
    VeDeposit_OrderBy["Provider"] = "provider";
    VeDeposit_OrderBy["Sender"] = "sender";
    VeDeposit_OrderBy["Timestamp"] = "timestamp";
    VeDeposit_OrderBy["TotalOceanLocked"] = "totalOceanLocked";
    VeDeposit_OrderBy["Tx"] = "tx";
    VeDeposit_OrderBy["Type"] = "type";
    VeDeposit_OrderBy["UnlockTime"] = "unlockTime";
    VeDeposit_OrderBy["Value"] = "value";
    VeDeposit_OrderBy["VeOcean"] = "veOcean";
})(VeDeposit_OrderBy || (exports.VeDeposit_OrderBy = VeDeposit_OrderBy = {}));
var VeFeeDistributorCheckPoint_OrderBy;
(function (VeFeeDistributorCheckPoint_OrderBy) {
    VeFeeDistributorCheckPoint_OrderBy["VeFeeDistributor"] = "VeFeeDistributor";
    VeFeeDistributorCheckPoint_OrderBy["Block"] = "block";
    VeFeeDistributorCheckPoint_OrderBy["EventIndex"] = "eventIndex";
    VeFeeDistributorCheckPoint_OrderBy["Id"] = "id";
    VeFeeDistributorCheckPoint_OrderBy["Sender"] = "sender";
    VeFeeDistributorCheckPoint_OrderBy["Timestamp"] = "timestamp";
    VeFeeDistributorCheckPoint_OrderBy["Tokens"] = "tokens";
    VeFeeDistributorCheckPoint_OrderBy["Tx"] = "tx";
})(VeFeeDistributorCheckPoint_OrderBy || (exports.VeFeeDistributorCheckPoint_OrderBy = VeFeeDistributorCheckPoint_OrderBy = {}));
var VeFeeDistributor_OrderBy;
(function (VeFeeDistributor_OrderBy) {
    VeFeeDistributor_OrderBy["Checkpoints"] = "checkpoints";
    VeFeeDistributor_OrderBy["Claims"] = "claims";
    VeFeeDistributor_OrderBy["Id"] = "id";
    VeFeeDistributor_OrderBy["Token"] = "token";
})(VeFeeDistributor_OrderBy || (exports.VeFeeDistributor_OrderBy = VeFeeDistributor_OrderBy = {}));
var VeOcean_OrderBy;
(function (VeOcean_OrderBy) {
    VeOcean_OrderBy["Allocation"] = "allocation";
    VeOcean_OrderBy["Block"] = "block";
    VeOcean_OrderBy["Claims"] = "claims";
    VeOcean_OrderBy["Delegates"] = "delegates";
    VeOcean_OrderBy["Delegation"] = "delegation";
    VeOcean_OrderBy["Deposits"] = "deposits";
    VeOcean_OrderBy["Id"] = "id";
    VeOcean_OrderBy["LockedAmount"] = "lockedAmount";
    VeOcean_OrderBy["UnlockTime"] = "unlockTime";
})(VeOcean_OrderBy || (exports.VeOcean_OrderBy = VeOcean_OrderBy = {}));
var _SubgraphErrorPolicy_;
(function (_SubgraphErrorPolicy_) {
    _SubgraphErrorPolicy_["Allow"] = "allow";
    _SubgraphErrorPolicy_["Deny"] = "deny";
})(_SubgraphErrorPolicy_ || (exports._SubgraphErrorPolicy_ = _SubgraphErrorPolicy_ = {}));
var VeAllocationUpdateType;
(function (VeAllocationUpdateType) {
    VeAllocationUpdateType["Removed"] = "REMOVED";
    VeAllocationUpdateType["Set"] = "SET";
})(VeAllocationUpdateType || (exports.VeAllocationUpdateType = VeAllocationUpdateType = {}));
//# sourceMappingURL=api.js.map